# -*- coding: utf-8 -*-
"""Proje1/GlobalAIHub.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v5H3CioqJvNuHIeVZvD0UMqc1Bu91IFx
"""

import pandas as pd
import numpy as np

"""Proje 1

Bu projede bir öğrenci not sistemi oluşturacaksınız. Sizden istenilenler:

** Kendinize bir ders belirleyiniz. (Matematik,Fizik, Lineer Cebir vb.)

** Not aralığınızı oluşturunuz (100-80 ⇒ A, 79-70 ⇒ B vb.)

** Öğrenci Bilgilerini (Ad, Soyad, Okul No, sınav puanı) girebileceğiniz ve bu bilgilerin tutulabileceği bir sistem oluşturunuz.

** Girilen bilgilerden yola çıkarak öğrencinin dersi geçip geçmediğini göstermesi gerekmektedir.

** Öğrenci dersi geçti ise öğrencinin bilgilerinin tutulduğu alana “Geçti” yazısı, öğrenci dersi geçemedi ise “kaldı” yazısını göstermesi gerekmektedir.

** Notları girilen öğrencilerden dersi geçenleri ve geçmeyenleri gösteren bir Dataframe oluşturunuz. 

** Oluşturulan Dataframe’i Excel tablosuna dönüştürünüz.





"""

ogrenci_liste = {}
ders_gecme_durumu = ["KALDI", "GEÇTİ"]


def ogrenci_ekle():
  ogrenci_ad = input("\nLütfen öğrencinin adını giriniz : ")
  ogrenci_soyad = input("Lütfen öğrencinin soyadını giriniz: ")

  ogrenci_ad_soyad = f"{ogrenci_ad} ".capitalize() + f"{ogrenci_soyad}".upper()

  ogrenci_okul_no = input("Lütfen öğrencinin okul numarasını giriniz: ")
  ogrenci_sinav_notu = int(input("Lütfen öğrencinin sınav notunu giriniz: "))

  if ogrenci_sinav_notu > 100 or ogrenci_sinav_notu < 0:
      ogrenci_sinav_notu = int(input("Öğrenci notu 0 ile 100 arasında olmalıdır! Lütfen öğrencinin sınav notunu giriniz: "))
  

  if ogrenci_sinav_notu >= 55:
      ogrenci_ders_gecme_durumu = ders_gecme_durumu[1]
  else:
      ogrenci_ders_gecme_durumu = ders_gecme_durumu[0]

  ogrenci_liste[ogrenci_ad_soyad] = [ogrenci_okul_no, ogrenci_sinav_notu, ogrenci_ders_gecme_durumu]

def dataframe_olustur(data): 
  global df_ogrenci
  df_ogrenci = pd.DataFrame.from_dict(data, orient ='index')
  df_ogrenci.columns = ['Okul No','Ders Notu','Durum']
  df_ogrenci.info()
  return df_ogrenci

def excel_olustur(data):
  data.to_excel("Ogrenci_Durum_Listesi.xlsx")

ogrenci_ekle()

ogrenci_liste.items()

dataframe_olustur(ogrenci_liste)

excel_olustur(df_ogrenci)